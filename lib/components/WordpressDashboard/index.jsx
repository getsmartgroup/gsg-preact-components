import { h } from 'preact';
import { Box, HStack, Heading, Stack, ChakraProvider } from '@chakra-ui/react';
import { useEffect, useState } from 'preact/hooks';
import Cookies from 'js-cookie';
import { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react';
import { Input, useBoolean } from '@chakra-ui/react';
import { Spinner } from '@chakra-ui/react';
import EvosusDashboard from '../EvosusDashboard';
const RestAPI = ({ nonce, siteurl, cookieHash, cookieValue }) => {
    if (cookieHash && cookieValue) {
        Cookies.set(cookieHash, cookieValue);
    }
    const headers = {
        'X-WP-Nonce': nonce,
        'content-type': 'application/json'
    };
    return {
        get: () => fetch(`${siteurl}/wp-json/gsg/v1/options`, {
            headers,
            credentials: 'include'
        }).then(res => res.json()),
        set: (options) => fetch(`${siteurl}/wp-json/gsg/v1/options`, {
            headers,
            credentials: 'include',
            method: 'POST',
            body: JSON.stringify(options)
        }).then(res => res.json())
    };
};
const WordpressDashboard = ({ nonce, siteurl, cookieHash, cookieValue }) => {
    const api = RestAPI({ nonce, siteurl, cookieHash, cookieValue });
    const [saving, setSaving] = useBoolean(false);
    const [fetching, setFetching] = useBoolean(true);
    const [options, setOptions] = useState({
        clientID: '',
        gsgToken: '',
        wc: {
            access: {
                key: '',
                secret: ''
            }
        },
        evosus: {
            access: {
                companySN: '',
                ticket: ''
            }
        }
    });
    useEffect(() => {
        api.get()
            .then(options => (options ? setOptions(options) : null))
            .finally(setFetching.off.bind(null));
    }, [nonce, siteurl, cookieHash, cookieValue]);
    useEffect(() => {
        if (!fetching) {
            const api = RestAPI({ nonce, siteurl, cookieHash, cookieValue });
            setSaving.on();
            api.set(options).finally(setSaving.off.bind(null));
        }
    }, [options]);
    const optionInput = (obj, target, label) => {
        const initialValue = obj[target];
        return (<Input disabled={fetching} placeholder={label} value={obj[target]} onChange={e => {
                const value = e.target.value;
                obj[target] = value;
            }} onBlur={() => {
                if (obj[target] !== initialValue) {
                    setOptions({ ...options });
                }
            }}/>);
    };
    return (<ChakraProvider>
			<Box>
				<HStack as='header' justifyContent='center' alignItems='center'>
					<Heading>Get Smart Plugin</Heading>
					{fetching || saving ? <Spinner /> : null}
				</HStack>
				<Tabs variant='soft-rounded' colorScheme='blue'>
					<TabList>
						<Tab>GSG</Tab>
						<Tab>WooCommerce</Tab>
						<Tab>Evosus</Tab>
					</TabList>
					<TabPanels>
						<TabPanel>
							<Heading size='sm'>GSG Config</Heading>
							<Stack spacing={3}>
								{optionInput(options, 'clientID', 'Client ID')}
								{optionInput(options, 'gsgToken', 'GSG Token')}
							</Stack>
						</TabPanel>
						<TabPanel>
							<Heading size='sm'>WooCommerce Config</Heading>
							<Stack spacing={3}>
								{optionInput(options.wc.access, 'key', 'WC REST API Key')}
								{optionInput(options.wc.access, 'secret', 'WC REST API Secret')}
							</Stack>
						</TabPanel>
						<TabPanel>
							<Heading size='sm'>Evosus Config</Heading>
							<Stack spacing={3}>
								{optionInput(options.evosus.access, 'companySN', 'Evosus Company SN')}
								{optionInput(options.evosus.access, 'ticket', 'Evosus Ticket')}
							</Stack>
							<EvosusDashboard clientID={options.clientID} gsgToken={options.gsgToken} companySN={options.evosus.access.companySN} ticket={options.evosus.access.ticket}/>
						</TabPanel>
					</TabPanels>
				</Tabs>
			</Box>
		</ChakraProvider>);
};
export default WordpressDashboard;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanN4Iiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvV29yZHByZXNzRGFzaGJvYXJkL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXVCLENBQUMsRUFBRSxNQUFNLFFBQVEsQ0FBQTtBQUMvQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQzlFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sY0FBYyxDQUFBO0FBQ2xELE9BQU8sT0FBTyxNQUFNLFdBQVcsQ0FBQTtBQUMvQixPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQzFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sa0JBQWtCLENBQUE7QUFDcEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBQzFDLE9BQU8sZUFBZSxNQUFNLG9CQUFvQixDQUFBO0FBeUJoRCxNQUFNLE9BQU8sR0FBRyxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFTLEVBQUUsRUFBRTtJQUN0RSxJQUFJLFVBQVUsSUFBSSxXQUFXLEVBQUU7UUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsV0FBVyxDQUFDLENBQUE7S0FDcEM7SUFDRCxNQUFNLE9BQU8sR0FBRztRQUNmLFlBQVksRUFBRSxLQUFLO1FBQ25CLGNBQWMsRUFBRSxrQkFBa0I7S0FDbEMsQ0FBQTtJQUNELE9BQU87UUFDTixHQUFHLEVBQUUsR0FBRyxFQUFFLENBQ1QsS0FBSyxDQUFDLEdBQUcsT0FBTyx5QkFBeUIsRUFBRTtZQUMxQyxPQUFPO1lBQ1AsV0FBVyxFQUFFLFNB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