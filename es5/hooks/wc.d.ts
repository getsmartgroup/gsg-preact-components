/// <reference types="react" />
import { FunctionalComponent } from 'preact';
import { wc } from 'gsg-integrations';
export declare type Props = wc.Options;
export declare const useIntegrationHook: (options: Props) => {
    client: wc.Client;
};
export declare type Context = ReturnType<typeof useIntegrationHook>;
export declare const ContextProvider: import("react").Provider<{
    client: wc.Client;
}>, useContext: () => {
    client: wc.Client;
};
export declare const Provider: FunctionalComponent<Props>;
export declare const useWC: () => {
    client: wc.Client;
};
export declare const useRestClient: <T>(crud: Omit<wc.CrudMethods<T, any>, "wc" | "route"> & wc.IndexCrud<any>) => {
    loading: boolean;
    index: Record<string, T>;
    array: T[];
    error: Error[];
    list: (params: any) => Promise<T[]>;
    create: (data: Partial<T>) => Promise<T>;
    retrieve: (id: number) => Promise<T>;
    put: (id: number, set: Partial<T>) => Promise<T>;
    update: (id: number, set: Partial<T>) => Promise<T>;
    delete: (id: number, force?: boolean | undefined) => Promise<T>;
    batch: (data: wc.BatchBody<T>) => Promise<{
        create?: T[] | undefined;
        update?: T[] | undefined;
        delete?: T[] | undefined;
    }>;
    getAll: (params: any) => Promise<T[]>;
    add: (p: any) => any;
    addMany: (p: any[]) => any[];
    addMaybeMany: (p: any) => any[];
    removeMany: (p: any[]) => any[];
    removeMaybeMany: (p: any) => any[];
};
export declare const useProduct: () => {
    loading: boolean;
    index: Record<string, {
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    array: {
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }[];
    error: Error[];
    list: (params: any) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }[]>;
    create: (data: Partial<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    retrieve: (id: number) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    put: (id: number, set: Partial<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    update: (id: number, set: Partial<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    delete: (id: number, force?: boolean | undefined) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>;
    batch: (data: wc.BatchBody<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }>) => Promise<{
        create?: {
            id: number;
            name: string;
            slug: string;
            permalink: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            type: "simple" | "variable" | "grouped";
            status: string;
            featured: boolean;
            catalog_visibility: string;
            description: string;
            short_description: string;
            sku: string;
            price: string;
            regular_price: string;
            sale_price: string;
            date_on_sale_from: string;
            date_on_sale_from_gmt: string;
            date_on_sale_to: string;
            date_on_sale_to_gmt: string;
            price_html: string;
            on_sale: boolean;
            purchasable: boolean;
            total_sales: number;
            virtual: boolean;
            downloadable: boolean;
            downloads: unknown[];
            download_limit: number;
            download_expiry: number;
            external_url: string;
            button_text: string;
            tax_status: string;
            tax_class: string;
            manage_stock: boolean;
            stock_quantity: number | null;
            in_stock: boolean;
            backorders: string;
            backorders_allowed: boolean;
            backordered: boolean;
            sold_individually: boolean;
            weight: string;
            dimensions: {
                length: string;
                width: string;
                height: string;
            };
            shipping_required: boolean;
            shipping_taxable: boolean;
            shipping_class: string;
            shipping_class_id: number;
            reviews_allowed: boolean;
            average_rating: string;
            rating_count: number;
            related_ids: number[];
            upsell_ids: number[];
            cross_sell_ids: number[];
            parent_id: number;
            purchase_note: string;
            categories: Partial<{
                id: number;
                name: string;
                slug: string;
                parent: number;
                description: string;
                display: string;
                image: unknown;
                menu_order: number;
                count: number;
                _links: unknown;
            }>[];
            tags: unknown[];
            images: unknown[];
            attributes: {
                id: number;
                name: string;
                position: number;
                visible: boolean;
                variation: boolean;
                options: string[];
            }[];
            default_attributes: unknown[];
            variations: number[];
            grouped_products: unknown[];
            menu_order: number;
            meta_data: unknown[];
            _links: unknown;
        }[] | undefined;
        update?: {
            id: number;
            name: string;
            slug: string;
            permalink: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            type: "simple" | "variable" | "grouped";
            status: string;
            featured: boolean;
            catalog_visibility: string;
            description: string;
            short_description: string;
            sku: string;
            price: string;
            regular_price: string;
            sale_price: string;
            date_on_sale_from: string;
            date_on_sale_from_gmt: string;
            date_on_sale_to: string;
            date_on_sale_to_gmt: string;
            price_html: string;
            on_sale: boolean;
            purchasable: boolean;
            total_sales: number;
            virtual: boolean;
            downloadable: boolean;
            downloads: unknown[];
            download_limit: number;
            download_expiry: number;
            external_url: string;
            button_text: string;
            tax_status: string;
            tax_class: string;
            manage_stock: boolean;
            stock_quantity: number | null;
            in_stock: boolean;
            backorders: string;
            backorders_allowed: boolean;
            backordered: boolean;
            sold_individually: boolean;
            weight: string;
            dimensions: {
                length: string;
                width: string;
                height: string;
            };
            shipping_required: boolean;
            shipping_taxable: boolean;
            shipping_class: string;
            shipping_class_id: number;
            reviews_allowed: boolean;
            average_rating: string;
            rating_count: number;
            related_ids: number[];
            upsell_ids: number[];
            cross_sell_ids: number[];
            parent_id: number;
            purchase_note: string;
            categories: Partial<{
                id: number;
                name: string;
                slug: string;
                parent: number;
                description: string;
                display: string;
                image: unknown;
                menu_order: number;
                count: number;
                _links: unknown;
            }>[];
            tags: unknown[];
            images: unknown[];
            attributes: {
                id: number;
                name: string;
                position: number;
                visible: boolean;
                variation: boolean;
                options: string[];
            }[];
            default_attributes: unknown[];
            variations: number[];
            grouped_products: unknown[];
            menu_order: number;
            meta_data: unknown[];
            _links: unknown;
        }[] | undefined;
        delete?: {
            id: number;
            name: string;
            slug: string;
            permalink: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            type: "simple" | "variable" | "grouped";
            status: string;
            featured: boolean;
            catalog_visibility: string;
            description: string;
            short_description: string;
            sku: string;
            price: string;
            regular_price: string;
            sale_price: string;
            date_on_sale_from: string;
            date_on_sale_from_gmt: string;
            date_on_sale_to: string;
            date_on_sale_to_gmt: string;
            price_html: string;
            on_sale: boolean;
            purchasable: boolean;
            total_sales: number;
            virtual: boolean;
            downloadable: boolean;
            downloads: unknown[];
            download_limit: number;
            download_expiry: number;
            external_url: string;
            button_text: string;
            tax_status: string;
            tax_class: string;
            manage_stock: boolean;
            stock_quantity: number | null;
            in_stock: boolean;
            backorders: string;
            backorders_allowed: boolean;
            backordered: boolean;
            sold_individually: boolean;
            weight: string;
            dimensions: {
                length: string;
                width: string;
                height: string;
            };
            shipping_required: boolean;
            shipping_taxable: boolean;
            shipping_class: string;
            shipping_class_id: number;
            reviews_allowed: boolean;
            average_rating: string;
            rating_count: number;
            related_ids: number[];
            upsell_ids: number[];
            cross_sell_ids: number[];
            parent_id: number;
            purchase_note: string;
            categories: Partial<{
                id: number;
                name: string;
                slug: string;
                parent: number;
                description: string;
                display: string;
                image: unknown;
                menu_order: number;
                count: number;
                _links: unknown;
            }>[];
            tags: unknown[];
            images: unknown[];
            attributes: {
                id: number;
                name: string;
                position: number;
                visible: boolean;
                variation: boolean;
                options: string[];
            }[];
            default_attributes: unknown[];
            variations: number[];
            grouped_products: unknown[];
            menu_order: number;
            meta_data: unknown[];
            _links: unknown;
        }[] | undefined;
    }>;
    getAll: (params: any) => Promise<{
        id: number;
        name: string;
        slug: string;
        permalink: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        type: "simple" | "variable" | "grouped";
        status: string;
        featured: boolean;
        catalog_visibility: string;
        description: string;
        short_description: string;
        sku: string;
        price: string;
        regular_price: string;
        sale_price: string;
        date_on_sale_from: string;
        date_on_sale_from_gmt: string;
        date_on_sale_to: string;
        date_on_sale_to_gmt: string;
        price_html: string;
        on_sale: boolean;
        purchasable: boolean;
        total_sales: number;
        virtual: boolean;
        downloadable: boolean;
        downloads: unknown[];
        download_limit: number;
        download_expiry: number;
        external_url: string;
        button_text: string;
        tax_status: string;
        tax_class: string;
        manage_stock: boolean;
        stock_quantity: number | null;
        in_stock: boolean;
        backorders: string;
        backorders_allowed: boolean;
        backordered: boolean;
        sold_individually: boolean;
        weight: string;
        dimensions: {
            length: string;
            width: string;
            height: string;
        };
        shipping_required: boolean;
        shipping_taxable: boolean;
        shipping_class: string;
        shipping_class_id: number;
        reviews_allowed: boolean;
        average_rating: string;
        rating_count: number;
        related_ids: number[];
        upsell_ids: number[];
        cross_sell_ids: number[];
        parent_id: number;
        purchase_note: string;
        categories: Partial<{
            id: number;
            name: string;
            slug: string;
            parent: number;
            description: string;
            display: string;
            image: unknown;
            menu_order: number;
            count: number;
            _links: unknown;
        }>[];
        tags: unknown[];
        images: unknown[];
        attributes: {
            id: number;
            name: string;
            position: number;
            visible: boolean;
            variation: boolean;
            options: string[];
        }[];
        default_attributes: unknown[];
        variations: number[];
        grouped_products: unknown[];
        menu_order: number;
        meta_data: unknown[];
        _links: unknown;
    }[]>;
    add: (p: any) => any;
    addMany: (p: any[]) => any[];
    addMaybeMany: (p: any) => any[];
    removeMany: (p: any[]) => any[];
    removeMaybeMany: (p: any) => any[];
};
export declare const useOrder: () => {
    loading: boolean;
    index: Record<string, {
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    array: {
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }[];
    error: Error[];
    list: (params: any) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }[]>;
    create: (data: Partial<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    retrieve: (id: number) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    put: (id: number, set: Partial<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    update: (id: number, set: Partial<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    delete: (id: number, force?: boolean | undefined) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>;
    batch: (data: wc.BatchBody<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }>) => Promise<{
        create?: {
            id: number;
            parent_id: number;
            number: string;
            order_key: string;
            created_via: string;
            version: string;
            status: string;
            currency: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            discount_total: string;
            discount_tax: string;
            shipping_total: string;
            shipping_tax: string;
            cart_tax: string;
            total: string;
            total_tax: string;
            prices_include_tax: boolean;
            customer_id: number;
            customer_ip_address: string;
            customer_user_agent: string;
            customer_note: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            payment_method: string;
            payment_method_title: string;
            transaction_id: string;
            date_paid?: any;
            date_paid_gmt?: any;
            date_completed?: any;
            date_completed_gmt?: any;
            cart_hash: string;
            meta_data: any[];
            line_items: wc.Order.LineItem[];
            tax_lines: unknown[];
            shipping_lines: wc.Order.ShippingLine[];
            fee_lines: unknown[];
            coupon_lines: unknown[];
            refunds: unknown[];
        }[] | undefined;
        update?: {
            id: number;
            parent_id: number;
            number: string;
            order_key: string;
            created_via: string;
            version: string;
            status: string;
            currency: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            discount_total: string;
            discount_tax: string;
            shipping_total: string;
            shipping_tax: string;
            cart_tax: string;
            total: string;
            total_tax: string;
            prices_include_tax: boolean;
            customer_id: number;
            customer_ip_address: string;
            customer_user_agent: string;
            customer_note: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            payment_method: string;
            payment_method_title: string;
            transaction_id: string;
            date_paid?: any;
            date_paid_gmt?: any;
            date_completed?: any;
            date_completed_gmt?: any;
            cart_hash: string;
            meta_data: any[];
            line_items: wc.Order.LineItem[];
            tax_lines: unknown[];
            shipping_lines: wc.Order.ShippingLine[];
            fee_lines: unknown[];
            coupon_lines: unknown[];
            refunds: unknown[];
        }[] | undefined;
        delete?: {
            id: number;
            parent_id: number;
            number: string;
            order_key: string;
            created_via: string;
            version: string;
            status: string;
            currency: string;
            date_created: string;
            date_created_gmt: string;
            date_modified: string;
            date_modified_gmt: string;
            discount_total: string;
            discount_tax: string;
            shipping_total: string;
            shipping_tax: string;
            cart_tax: string;
            total: string;
            total_tax: string;
            prices_include_tax: boolean;
            customer_id: number;
            customer_ip_address: string;
            customer_user_agent: string;
            customer_note: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            payment_method: string;
            payment_method_title: string;
            transaction_id: string;
            date_paid?: any;
            date_paid_gmt?: any;
            date_completed?: any;
            date_completed_gmt?: any;
            cart_hash: string;
            meta_data: any[];
            line_items: wc.Order.LineItem[];
            tax_lines: unknown[];
            shipping_lines: wc.Order.ShippingLine[];
            fee_lines: unknown[];
            coupon_lines: unknown[];
            refunds: unknown[];
        }[] | undefined;
    }>;
    getAll: (params: any) => Promise<{
        id: number;
        parent_id: number;
        number: string;
        order_key: string;
        created_via: string;
        version: string;
        status: string;
        currency: string;
        date_created: string;
        date_created_gmt: string;
        date_modified: string;
        date_modified_gmt: string;
        discount_total: string;
        discount_tax: string;
        shipping_total: string;
        shipping_tax: string;
        cart_tax: string;
        total: string;
        total_tax: string;
        prices_include_tax: boolean;
        customer_id: number;
        customer_ip_address: string;
        customer_user_agent: string;
        customer_note: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        payment_method: string;
        payment_method_title: string;
        transaction_id: string;
        date_paid?: any;
        date_paid_gmt?: any;
        date_completed?: any;
        date_completed_gmt?: any;
        cart_hash: string;
        meta_data: any[];
        line_items: wc.Order.LineItem[];
        tax_lines: unknown[];
        shipping_lines: wc.Order.ShippingLine[];
        fee_lines: unknown[];
        coupon_lines: unknown[];
        refunds: unknown[];
    }[]>;
    add: (p: any) => any;
    addMany: (p: any[]) => any[];
    addMaybeMany: (p: any) => any[];
    removeMany: (p: any[]) => any[];
    removeMaybeMany: (p: any) => any[];
};
export declare const useCustomer: () => {
    loading: boolean;
    index: Record<string, {
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    array: {
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }[];
    error: Error[];
    list: (params: any) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }[]>;
    create: (data: Partial<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    retrieve: (id: number) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    put: (id: number, set: Partial<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    update: (id: number, set: Partial<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    delete: (id: number, force?: boolean | undefined) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>;
    batch: (data: wc.BatchBody<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }>) => Promise<{
        create?: {
            id: number;
            date_created: Date;
            date_created_gmt: Date;
            date_modified: Date;
            date_modified_gmt: Date;
            email: string;
            first_name: string;
            last_name: string;
            role: string;
            username: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            is_paying_customer: boolean;
            avatar_url: string;
            meta_data: unknown[];
        }[] | undefined;
        update?: {
            id: number;
            date_created: Date;
            date_created_gmt: Date;
            date_modified: Date;
            date_modified_gmt: Date;
            email: string;
            first_name: string;
            last_name: string;
            role: string;
            username: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            is_paying_customer: boolean;
            avatar_url: string;
            meta_data: unknown[];
        }[] | undefined;
        delete?: {
            id: number;
            date_created: Date;
            date_created_gmt: Date;
            date_modified: Date;
            date_modified_gmt: Date;
            email: string;
            first_name: string;
            last_name: string;
            role: string;
            username: string;
            billing: wc.Order.Billing;
            shipping: wc.Order.Shipping;
            is_paying_customer: boolean;
            avatar_url: string;
            meta_data: unknown[];
        }[] | undefined;
    }>;
    getAll: (params: any) => Promise<{
        id: number;
        date_created: Date;
        date_created_gmt: Date;
        date_modified: Date;
        date_modified_gmt: Date;
        email: string;
        first_name: string;
        last_name: string;
        role: string;
        username: string;
        billing: wc.Order.Billing;
        shipping: wc.Order.Shipping;
        is_paying_customer: boolean;
        avatar_url: string;
        meta_data: unknown[];
    }[]>;
    add: (p: any) => any;
    addMany: (p: any[]) => any[];
    addMaybeMany: (p: any) => any[];
    removeMany: (p: any[]) => any[];
    removeMaybeMany: (p: any) => any[];
};
